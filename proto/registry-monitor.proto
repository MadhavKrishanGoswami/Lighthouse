syntax = "proto3";

package registrymonitor;

option go_package = "github.com/MadhavKrishanGoswami/Lighthouse/services/registry-monitor";

// ==========================
// Messages
// ==========================
message ImageInfo {
  string containerUid = 1; // Unique ID for the container
  string repository = 2; // e.g., "nginx"
  string tag = 3;        // e.g., "1.25.0"
  string digest = 4;     // e.g., "sha256:abc123..."
}

message CheckUpdatesRequest {
  repeated ImageInfo images = 1; // List of images currently in use
}

message ImagetoUpdate {
  string containerUid = 1; // Unique ID for the container
  string newTag = 3;        // e.g., "1.25.1"
  string description = 2;  // Optional info, e.g., "Patch release available"
  int64 timestamp = 5;     // Unix timestamp when update was detected
}

message CheckUpdatesResponse {
  repeated ImagetoUpdate ImagestoUpdate = 1; // Only images with updates
}

// ==========================
// Service
// ==========================
service RegistryMonitorService {
  // Orchestrator calls this to check for updates on a batch of images
  rpc CheckUpdates(CheckUpdatesRequest) returns (CheckUpdatesResponse);
}

