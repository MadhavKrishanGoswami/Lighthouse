syntax = "proto3";

package registrymonitor;

option go_package = "github.com/MadhavKrishanGoswami/Lighthouse/services/registry-monitor";


//==========================
// messages
//==========================
message ImageInfo {
  string repository = 1; // e.g., "nginx"
  string tag = 2;        // e.g., "latest"
}
message ImageUpdateEvent {
  ImageInfo image = 1;
  string description = 2; // e.g., "New image pushed to registry"
  int64 timestamp = 3;    // Unix timestamp of the event
}
//==========================
// Request / Response Wrappers
//==========================
message UpdateWatchlistRequest {
  repeated ImageInfo images = 1;
}
message WatchlistUpatedResponse {
  bool success = 1;
  string message = 2;
}
message GetUpdatesRequest {
  int64 since_timestamp = 1; // Fetch updates since this timestamp
}
message GetUpdatesResponse {
  repeated ImageUpdateEvent updates = 1;
}


// Service implemented by Orchestrator; called by Registry Monitor
service RegistryMonitorService {
  rpc UpdateWatchlist(UpdateWatchlistRequest) returns (WatchlistUpatedResponse);
  rpc GetUpdates(GetUpdatesRequest) returns (GetUpdatesResponse);
}
