// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: host-agent.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStatus_Stage int32

const (
	UpdateStatus_UNKNOWN      UpdateStatus_Stage = 0
	UpdateStatus_PULLING      UpdateStatus_Stage = 1
	UpdateStatus_STARTING     UpdateStatus_Stage = 2
	UpdateStatus_HEALTH_CHECK UpdateStatus_Stage = 3
	UpdateStatus_COMPLETED    UpdateStatus_Stage = 4
	UpdateStatus_ROLLBACK     UpdateStatus_Stage = 5
	UpdateStatus_FAILED       UpdateStatus_Stage = 6
	UpdateStatus_RUNNING      UpdateStatus_Stage = 7
)

// Enum value maps for UpdateStatus_Stage.
var (
	UpdateStatus_Stage_name = map[int32]string{
		0: "UNKNOWN",
		1: "PULLING",
		2: "STARTING",
		3: "HEALTH_CHECK",
		4: "COMPLETED",
		5: "ROLLBACK",
		6: "FAILED",
		7: "RUNNING",
	}
	UpdateStatus_Stage_value = map[string]int32{
		"UNKNOWN":      0,
		"PULLING":      1,
		"STARTING":     2,
		"HEALTH_CHECK": 3,
		"COMPLETED":    4,
		"ROLLBACK":     5,
		"FAILED":       6,
		"RUNNING":      7,
	}
)

func (x UpdateStatus_Stage) Enum() *UpdateStatus_Stage {
	p := new(UpdateStatus_Stage)
	*p = x
	return p
}

func (x UpdateStatus_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStatus_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_host_agent_proto_enumTypes[0].Descriptor()
}

func (UpdateStatus_Stage) Type() protoreflect.EnumType {
	return &file_host_agent_proto_enumTypes[0]
}

func (x UpdateStatus_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStatus_Stage.Descriptor instead.
func (UpdateStatus_Stage) EnumDescriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{8, 0}
}

// Port mapping definition
type PortMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostIp        string                 `protobuf:"bytes,1,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`                       // e.g., "0.0.0.0" or "::"
	HostPort      uint32                 `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`                // e.g., 8080
	ContainerPort uint32                 `protobuf:"varint,3,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"` // e.g., 80
	Protocol      string                 `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`                                 // "tcp" or "udp"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	mi := &file_host_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{0}
}

func (x *PortMapping) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *PortMapping) GetHostPort() uint32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetContainerPort() uint32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *PortMapping) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type ContainerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerID   string                 `protobuf:"bytes,1,opt,name=containerID,proto3" json:"containerID,omitempty"` // Unique identifier for the container
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Name of the container
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`             // Docker image used for the container
	Ports         []*PortMapping         `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`             // Structured ports
	EnvVars       []string               `protobuf:"bytes,5,rep,name=envVars,proto3" json:"envVars,omitempty"`
	Volumes       []string               `protobuf:"bytes,6,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Network       string                 `protobuf:"bytes,7,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerInfo) Reset() {
	*x = ContainerInfo{}
	mi := &file_host_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInfo) ProtoMessage() {}

func (x *ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInfo.ProtoReflect.Descriptor instead.
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerInfo) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerInfo) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ContainerInfo) GetEnvVars() []string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *ContainerInfo) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ContainerInfo) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type HostInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MacAddress    string                 `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Containers    []*ContainerInfo       `protobuf:"bytes,5,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_host_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{2}
}

func (x *HostInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *HostInfo) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

type RegisterHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          *HostInfo              `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterHostRequest) Reset() {
	*x = RegisterHostRequest{}
	mi := &file_host_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHostRequest) ProtoMessage() {}

func (x *RegisterHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHostRequest.ProtoReflect.Descriptor instead.
func (*RegisterHostRequest) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterHostRequest) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

type RegisterHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterHostResponse) Reset() {
	*x = RegisterHostResponse{}
	mi := &file_host_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterHostResponse) ProtoMessage() {}

func (x *RegisterHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterHostResponse.ProtoReflect.Descriptor instead.
func (*RegisterHostResponse) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterHostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterHostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MacAddress    string                 `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Containers    []*ContainerInfo       `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_host_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *HeartbeatRequest) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_host_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateContainerCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContainerUID    string                 `protobuf:"bytes,2,opt,name=containerUID,proto3" json:"containerUID,omitempty"`       // which container to update
	Image           string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`                     // target image (repo:tag or digest)
	OverrideEnvVars []string               `protobuf:"bytes,4,rep,name=overrideEnvVars,proto3" json:"overrideEnvVars,omitempty"` // optional overrides
	OverridePorts   []*PortMapping         `protobuf:"bytes,5,rep,name=overridePorts,proto3" json:"overridePorts,omitempty"`     // structured ports override
	OverrideVolumes []string               `protobuf:"bytes,6,rep,name=overrideVolumes,proto3" json:"overrideVolumes,omitempty"`
	OverrideNetwork string                 `protobuf:"bytes,7,opt,name=overrideNetwork,proto3" json:"overrideNetwork,omitempty"`
	MacAddress      string                 `protobuf:"bytes,8,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"` // target host
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateContainerCommand) Reset() {
	*x = UpdateContainerCommand{}
	mi := &file_host_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContainerCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContainerCommand) ProtoMessage() {}

func (x *UpdateContainerCommand) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContainerCommand.ProtoReflect.Descriptor instead.
func (*UpdateContainerCommand) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateContainerCommand) GetContainerUID() string {
	if x != nil {
		return x.ContainerUID
	}
	return ""
}

func (x *UpdateContainerCommand) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateContainerCommand) GetOverrideEnvVars() []string {
	if x != nil {
		return x.OverrideEnvVars
	}
	return nil
}

func (x *UpdateContainerCommand) GetOverridePorts() []*PortMapping {
	if x != nil {
		return x.OverridePorts
	}
	return nil
}

func (x *UpdateContainerCommand) GetOverrideVolumes() []string {
	if x != nil {
		return x.OverrideVolumes
	}
	return nil
}

func (x *UpdateContainerCommand) GetOverrideNetwork() string {
	if x != nil {
		return x.OverrideNetwork
	}
	return ""
}

func (x *UpdateContainerCommand) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type UpdateStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerUID  string                 `protobuf:"bytes,2,opt,name=containerUID,proto3" json:"containerUID,omitempty"`
	Image         string                 `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`                             // target image (repo:tag or digest)
	MacAddress    string                 `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"` // target host
	Stage         UpdateStatus_Stage     `protobuf:"varint,3,opt,name=stage,proto3,enum=orchestrator.UpdateStatus_Stage" json:"stage,omitempty"`
	Logs          string                 `protobuf:"bytes,4,opt,name=logs,proto3" json:"logs,omitempty"`           // status log/err messages
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // optional, useful for ordering
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatus) Reset() {
	*x = UpdateStatus{}
	mi := &file_host_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatus) ProtoMessage() {}

func (x *UpdateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_host_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatus.ProtoReflect.Descriptor instead.
func (*UpdateStatus) Descriptor() ([]byte, []int) {
	return file_host_agent_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateStatus) GetContainerUID() string {
	if x != nil {
		return x.ContainerUID
	}
	return ""
}

func (x *UpdateStatus) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateStatus) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *UpdateStatus) GetStage() UpdateStatus_Stage {
	if x != nil {
		return x.Stage
	}
	return UpdateStatus_UNKNOWN
}

func (x *UpdateStatus) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

func (x *UpdateStatus) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

var File_host_agent_proto protoreflect.FileDescriptor

const file_host_agent_proto_rawDesc = "" +
	"\n" +
	"\x10host-agent.proto\x12\forchestrator\"\x86\x01\n" +
	"\vPortMapping\x12\x17\n" +
	"\ahost_ip\x18\x01 \x01(\tR\x06hostIp\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\rR\bhostPort\x12%\n" +
	"\x0econtainer_port\x18\x03 \x01(\rR\rcontainerPort\x12\x1a\n" +
	"\bprotocol\x18\x04 \x01(\tR\bprotocol\"\xda\x01\n" +
	"\rContainerInfo\x12 \n" +
	"\vcontainerID\x18\x01 \x01(\tR\vcontainerID\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12/\n" +
	"\x05ports\x18\x04 \x03(\v2\x19.orchestrator.PortMappingR\x05ports\x12\x18\n" +
	"\aenvVars\x18\x05 \x03(\tR\aenvVars\x12\x18\n" +
	"\avolumes\x18\x06 \x03(\tR\avolumes\x12\x18\n" +
	"\anetwork\x18\a \x01(\tR\anetwork\"\xa3\x01\n" +
	"\bHostInfo\x12\x1f\n" +
	"\vmac_address\x18\x01 \x01(\tR\n" +
	"macAddress\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12;\n" +
	"\n" +
	"containers\x18\x05 \x03(\v2\x1b.orchestrator.ContainerInfoR\n" +
	"containers\"A\n" +
	"\x13RegisterHostRequest\x12*\n" +
	"\x04host\x18\x01 \x01(\v2\x16.orchestrator.HostInfoR\x04host\"J\n" +
	"\x14RegisterHostResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"p\n" +
	"\x10HeartbeatRequest\x12\x1f\n" +
	"\vmac_address\x18\x01 \x01(\tR\n" +
	"macAddress\x12;\n" +
	"\n" +
	"containers\x18\x03 \x03(\v2\x1b.orchestrator.ContainerInfoR\n" +
	"containers\"G\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb2\x02\n" +
	"\x16UpdateContainerCommand\x12\"\n" +
	"\fcontainerUID\x18\x02 \x01(\tR\fcontainerUID\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12(\n" +
	"\x0foverrideEnvVars\x18\x04 \x03(\tR\x0foverrideEnvVars\x12?\n" +
	"\roverridePorts\x18\x05 \x03(\v2\x19.orchestrator.PortMappingR\roverridePorts\x12(\n" +
	"\x0foverrideVolumes\x18\x06 \x03(\tR\x0foverrideVolumes\x12(\n" +
	"\x0foverrideNetwork\x18\a \x01(\tR\x0foverrideNetwork\x12\x1f\n" +
	"\vmac_address\x18\b \x01(\tR\n" +
	"macAddress\"\xcc\x02\n" +
	"\fUpdateStatus\x12\"\n" +
	"\fcontainerUID\x18\x02 \x01(\tR\fcontainerUID\x12\x14\n" +
	"\x05image\x18\a \x01(\tR\x05image\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\x126\n" +
	"\x05stage\x18\x03 \x01(\x0e2 .orchestrator.UpdateStatus.StageR\x05stage\x12\x12\n" +
	"\x04logs\x18\x04 \x01(\tR\x04logs\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"w\n" +
	"\x05Stage\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aPULLING\x10\x01\x12\f\n" +
	"\bSTARTING\x10\x02\x12\x10\n" +
	"\fHEALTH_CHECK\x10\x03\x12\r\n" +
	"\tCOMPLETED\x10\x04\x12\f\n" +
	"\bROLLBACK\x10\x05\x12\n" +
	"\n" +
	"\x06FAILED\x10\x06\x12\v\n" +
	"\aRUNNING\x10\a2\x93\x02\n" +
	"\x10HostAgentService\x12U\n" +
	"\fRegisterHost\x12!.orchestrator.RegisterHostRequest\x1a\".orchestrator.RegisterHostResponse\x12L\n" +
	"\tHeartbeat\x12\x1e.orchestrator.HeartbeatRequest\x1a\x1f.orchestrator.HeartbeatResponse\x12Z\n" +
	"\x12ConnectAgentStream\x12\x1a.orchestrator.UpdateStatus\x1a$.orchestrator.UpdateContainerCommand(\x010\x01BBZ@github.com/MadhavKrishanGoswami/Lighthouse/services/orchestratorb\x06proto3"

var (
	file_host_agent_proto_rawDescOnce sync.Once
	file_host_agent_proto_rawDescData []byte
)

func file_host_agent_proto_rawDescGZIP() []byte {
	file_host_agent_proto_rawDescOnce.Do(func() {
		file_host_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_host_agent_proto_rawDesc), len(file_host_agent_proto_rawDesc)))
	})
	return file_host_agent_proto_rawDescData
}

var file_host_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_host_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_host_agent_proto_goTypes = []any{
	(UpdateStatus_Stage)(0),        // 0: orchestrator.UpdateStatus.Stage
	(*PortMapping)(nil),            // 1: orchestrator.PortMapping
	(*ContainerInfo)(nil),          // 2: orchestrator.ContainerInfo
	(*HostInfo)(nil),               // 3: orchestrator.HostInfo
	(*RegisterHostRequest)(nil),    // 4: orchestrator.RegisterHostRequest
	(*RegisterHostResponse)(nil),   // 5: orchestrator.RegisterHostResponse
	(*HeartbeatRequest)(nil),       // 6: orchestrator.HeartbeatRequest
	(*HeartbeatResponse)(nil),      // 7: orchestrator.HeartbeatResponse
	(*UpdateContainerCommand)(nil), // 8: orchestrator.UpdateContainerCommand
	(*UpdateStatus)(nil),           // 9: orchestrator.UpdateStatus
}
var file_host_agent_proto_depIdxs = []int32{
	1, // 0: orchestrator.ContainerInfo.ports:type_name -> orchestrator.PortMapping
	2, // 1: orchestrator.HostInfo.containers:type_name -> orchestrator.ContainerInfo
	3, // 2: orchestrator.RegisterHostRequest.host:type_name -> orchestrator.HostInfo
	2, // 3: orchestrator.HeartbeatRequest.containers:type_name -> orchestrator.ContainerInfo
	1, // 4: orchestrator.UpdateContainerCommand.overridePorts:type_name -> orchestrator.PortMapping
	0, // 5: orchestrator.UpdateStatus.stage:type_name -> orchestrator.UpdateStatus.Stage
	4, // 6: orchestrator.HostAgentService.RegisterHost:input_type -> orchestrator.RegisterHostRequest
	6, // 7: orchestrator.HostAgentService.Heartbeat:input_type -> orchestrator.HeartbeatRequest
	9, // 8: orchestrator.HostAgentService.ConnectAgentStream:input_type -> orchestrator.UpdateStatus
	5, // 9: orchestrator.HostAgentService.RegisterHost:output_type -> orchestrator.RegisterHostResponse
	7, // 10: orchestrator.HostAgentService.Heartbeat:output_type -> orchestrator.HeartbeatResponse
	8, // 11: orchestrator.HostAgentService.ConnectAgentStream:output_type -> orchestrator.UpdateContainerCommand
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_host_agent_proto_init() }
func file_host_agent_proto_init() {
	if File_host_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_host_agent_proto_rawDesc), len(file_host_agent_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_host_agent_proto_goTypes,
		DependencyIndexes: file_host_agent_proto_depIdxs,
		EnumInfos:         file_host_agent_proto_enumTypes,
		MessageInfos:      file_host_agent_proto_msgTypes,
	}.Build()
	File_host_agent_proto = out.File
	file_host_agent_proto_goTypes = nil
	file_host_agent_proto_depIdxs = nil
}
