// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: tui.proto

package tui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContainerInfo_Status int32

const (
	ContainerInfo_UNKNOWN    ContainerInfo_Status = 0
	ContainerInfo_RUNNING    ContainerInfo_Status = 1
	ContainerInfo_STOPPED    ContainerInfo_Status = 2
	ContainerInfo_PAUSED     ContainerInfo_Status = 3
	ContainerInfo_RESTARTING ContainerInfo_Status = 4
	ContainerInfo_EXITED     ContainerInfo_Status = 5
	ContainerInfo_DEAD       ContainerInfo_Status = 6
)

// Enum value maps for ContainerInfo_Status.
var (
	ContainerInfo_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "STOPPED",
		3: "PAUSED",
		4: "RESTARTING",
		5: "EXITED",
		6: "DEAD",
	}
	ContainerInfo_Status_value = map[string]int32{
		"UNKNOWN":    0,
		"RUNNING":    1,
		"STOPPED":    2,
		"PAUSED":     3,
		"RESTARTING": 4,
		"EXITED":     5,
		"DEAD":       6,
	}
)

func (x ContainerInfo_Status) Enum() *ContainerInfo_Status {
	p := new(ContainerInfo_Status)
	*p = x
	return p
}

func (x ContainerInfo_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerInfo_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_tui_proto_enumTypes[0].Descriptor()
}

func (ContainerInfo_Status) Type() protoreflect.EnumType {
	return &file_tui_proto_enumTypes[0]
}

func (x ContainerInfo_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerInfo_Status.Descriptor instead.
func (ContainerInfo_Status) EnumDescriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{0, 0}
}

type ServicesStatusServices int32

const (
	ServicesStatus_ORCHESTRATOR     ServicesStatusServices = 0
	ServicesStatus_REGISTRY_Monitor ServicesStatusServices = 1
	ServicesStatus_Database         ServicesStatusServices = 2
)

// Enum value maps for ServicesStatusServices.
var (
	ServicesStatusServices_name = map[int32]string{
		0: "ORCHESTRATOR",
		1: "REGISTRY_Monitor",
		2: "Database",
	}
	ServicesStatusServices_value = map[string]int32{
		"ORCHESTRATOR":     0,
		"REGISTRY_Monitor": 1,
		"Database":         2,
	}
)

func (x ServicesStatusServices) Enum() *ServicesStatusServices {
	p := new(ServicesStatusServices)
	*p = x
	return p
}

func (x ServicesStatusServices) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServicesStatusServices) Descriptor() protoreflect.EnumDescriptor {
	return file_tui_proto_enumTypes[1].Descriptor()
}

func (ServicesStatusServices) Type() protoreflect.EnumType {
	return &file_tui_proto_enumTypes[1]
}

func (x ServicesStatusServices) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServicesStatusServices.Descriptor instead.
func (ServicesStatusServices) EnumDescriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{3, 0}
}

type ContainerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Status        ContainerInfo_Status   `protobuf:"varint,3,opt,name=status,proto3,enum=tui.ContainerInfo_Status" json:"status,omitempty"`
	Watch         bool                   `protobuf:"varint,4,opt,name=watch,proto3" json:"watch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerInfo) Reset() {
	*x = ContainerInfo{}
	mi := &file_tui_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInfo) ProtoMessage() {}

func (x *ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerInfo.ProtoReflect.Descriptor instead.
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerInfo) GetStatus() ContainerInfo_Status {
	if x != nil {
		return x.Status
	}
	return ContainerInfo_UNKNOWN
}

func (x *ContainerInfo) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type HostInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MacAddress    string                 `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	LastHeartbeat string                 `protobuf:"bytes,4,opt,name=lastHeartbeat,proto3" json:"lastHeartbeat,omitempty"`
	Containers    []*ContainerInfo       `protobuf:"bytes,5,rep,name=containers,proto3" json:"containers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_tui_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{1}
}

func (x *HostInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *HostInfo) GetLastHeartbeat() string {
	if x != nil {
		return x.LastHeartbeat
	}
	return ""
}

func (x *HostInfo) GetContainers() []*ContainerInfo {
	if x != nil {
		return x.Containers
	}
	return nil
}

type HostList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*HostInfo            `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostList) Reset() {
	*x = HostList{}
	mi := &file_tui_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostList) ProtoMessage() {}

func (x *HostList) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostList.ProtoReflect.Descriptor instead.
func (*HostList) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{2}
}

func (x *HostList) GetHosts() []*HostInfo {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type ServicesStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServicesStatus ServicesStatusServices `protobuf:"varint,1,opt,name=services_status,json=servicesStatus,proto3,enum=tui.ServicesStatusServices" json:"services_status,omitempty"`
	Status         bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServicesStatus) Reset() {
	*x = ServicesStatus{}
	mi := &file_tui_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServicesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesStatus) ProtoMessage() {}

func (x *ServicesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesStatus.ProtoReflect.Descriptor instead.
func (*ServicesStatus) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{3}
}

func (x *ServicesStatus) GetServicesStatus() ServicesStatusServices {
	if x != nil {
		return x.ServicesStatus
	}
	return ServicesStatus_ORCHESTRATOR
}

func (x *ServicesStatus) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// ===================
// Request / Response Wrappers
// ===================
type DataStreamSend struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HostList       *HostList              `protobuf:"bytes,1,opt,name=host_list,json=hostList,proto3" json:"host_list,omitempty"`
	Logs           string                 `protobuf:"bytes,2,opt,name=logs,proto3" json:"logs,omitempty"` // legacy logs field (will be trimmed or empty once StreamLogs used)
	CronTime       int32                  `protobuf:"varint,3,opt,name=cron_time,json=cronTime,proto3" json:"cron_time,omitempty"`
	ServicesStatus []*ServicesStatus      `protobuf:"bytes,4,rep,name=services_status,json=servicesStatus,proto3" json:"services_status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DataStreamSend) Reset() {
	*x = DataStreamSend{}
	mi := &file_tui_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStreamSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStreamSend) ProtoMessage() {}

func (x *DataStreamSend) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStreamSend.ProtoReflect.Descriptor instead.
func (*DataStreamSend) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{4}
}

func (x *DataStreamSend) GetHostList() *HostList {
	if x != nil {
		return x.HostList
	}
	return nil
}

func (x *DataStreamSend) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

func (x *DataStreamSend) GetCronTime() int32 {
	if x != nil {
		return x.CronTime
	}
	return 0
}

func (x *DataStreamSend) GetServicesStatus() []*ServicesStatus {
	if x != nil {
		return x.ServicesStatus
	}
	return nil
}

type DataStreamReceived struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           string                 `protobuf:"bytes,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStreamReceived) Reset() {
	*x = DataStreamReceived{}
	mi := &file_tui_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStreamReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStreamReceived) ProtoMessage() {}

func (x *DataStreamReceived) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStreamReceived.ProtoReflect.Descriptor instead.
func (*DataStreamReceived) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{5}
}

func (x *DataStreamReceived) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

// Streaming log line (simple)
type LogLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          string                 `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"` // already timestamped string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	mi := &file_tui_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{6}
}

func (x *LogLine) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

type SetWatchlistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerName string                 `protobuf:"bytes,1,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	HostMac       string                 `protobuf:"bytes,2,opt,name=host_mac,json=hostMac,proto3" json:"host_mac,omitempty"`
	Watch         bool                   `protobuf:"varint,3,opt,name=watch,proto3" json:"watch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWatchlistRequest) Reset() {
	*x = SetWatchlistRequest{}
	mi := &file_tui_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWatchlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWatchlistRequest) ProtoMessage() {}

func (x *SetWatchlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWatchlistRequest.ProtoReflect.Descriptor instead.
func (*SetWatchlistRequest) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{7}
}

func (x *SetWatchlistRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *SetWatchlistRequest) GetHostMac() string {
	if x != nil {
		return x.HostMac
	}
	return ""
}

func (x *SetWatchlistRequest) GetWatch() bool {
	if x != nil {
		return x.Watch
	}
	return false
}

type SetWatchlistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWatchlistResponse) Reset() {
	*x = SetWatchlistResponse{}
	mi := &file_tui_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWatchlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWatchlistResponse) ProtoMessage() {}

func (x *SetWatchlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWatchlistResponse.ProtoReflect.Descriptor instead.
func (*SetWatchlistResponse) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{8}
}

func (x *SetWatchlistResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetWatchlistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SetCronTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CronTime      int32                  `protobuf:"varint,1,opt,name=cron_time,json=cronTime,proto3" json:"cron_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCronTimeRequest) Reset() {
	*x = SetCronTimeRequest{}
	mi := &file_tui_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCronTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCronTimeRequest) ProtoMessage() {}

func (x *SetCronTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCronTimeRequest.ProtoReflect.Descriptor instead.
func (*SetCronTimeRequest) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{9}
}

func (x *SetCronTimeRequest) GetCronTime() int32 {
	if x != nil {
		return x.CronTime
	}
	return 0
}

type SetCronTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCronTimeResponse) Reset() {
	*x = SetCronTimeResponse{}
	mi := &file_tui_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCronTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCronTimeResponse) ProtoMessage() {}

func (x *SetCronTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tui_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCronTimeResponse.ProtoReflect.Descriptor instead.
func (*SetCronTimeResponse) Descriptor() ([]byte, []int) {
	return file_tui_proto_rawDescGZIP(), []int{10}
}

func (x *SetCronTimeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetCronTimeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_tui_proto protoreflect.FileDescriptor

const file_tui_proto_rawDesc = "" +
	"\n" +
	"\ttui.proto\x12\x03tui\"\xe5\x01\n" +
	"\rContainerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x121\n" +
	"\x06status\x18\x03 \x01(\x0e2\x19.tui.ContainerInfo.StatusR\x06status\x12\x14\n" +
	"\x05watch\x18\x04 \x01(\bR\x05watch\"a\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\v\n" +
	"\aSTOPPED\x10\x02\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x03\x12\x0e\n" +
	"\n" +
	"RESTARTING\x10\x04\x12\n" +
	"\n" +
	"\x06EXITED\x10\x05\x12\b\n" +
	"\x04DEAD\x10\x06\"\xc0\x01\n" +
	"\bHostInfo\x12\x1f\n" +
	"\vmac_address\x18\x01 \x01(\tR\n" +
	"macAddress\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12$\n" +
	"\rlastHeartbeat\x18\x04 \x01(\tR\rlastHeartbeat\x122\n" +
	"\n" +
	"containers\x18\x05 \x03(\v2\x12.tui.ContainerInfoR\n" +
	"containers\"/\n" +
	"\bHostList\x12#\n" +
	"\x05hosts\x18\x01 \x03(\v2\r.tui.HostInfoR\x05hosts\"\xb1\x01\n" +
	"\x0eservicesStatus\x12E\n" +
	"\x0fservices_status\x18\x01 \x01(\x0e2\x1c.tui.servicesStatus.servicesR\x0eservicesStatus\x12\x16\n" +
	"\x06status\x18\x02 \x01(\bR\x06status\"@\n" +
	"\bservices\x12\x10\n" +
	"\fORCHESTRATOR\x10\x00\x12\x14\n" +
	"\x10REGISTRY_Monitor\x10\x01\x12\f\n" +
	"\bDatabase\x10\x02\"\xab\x01\n" +
	"\x0eDataStreamSend\x12*\n" +
	"\thost_list\x18\x01 \x01(\v2\r.tui.HostListR\bhostList\x12\x12\n" +
	"\x04logs\x18\x02 \x01(\tR\x04logs\x12\x1b\n" +
	"\tcron_time\x18\x03 \x01(\x05R\bcronTime\x12<\n" +
	"\x0fservices_status\x18\x04 \x03(\v2\x13.tui.servicesStatusR\x0eservicesStatus\"&\n" +
	"\x12DataStreamReceived\x12\x10\n" +
	"\x03ack\x18\x01 \x01(\tR\x03ack\"\x1d\n" +
	"\aLogLine\x12\x12\n" +
	"\x04line\x18\x01 \x01(\tR\x04line\"m\n" +
	"\x13SetWatchlistRequest\x12%\n" +
	"\x0econtainer_name\x18\x01 \x01(\tR\rcontainerName\x12\x19\n" +
	"\bhost_mac\x18\x02 \x01(\tR\ahostMac\x12\x14\n" +
	"\x05watch\x18\x03 \x01(\bR\x05watch\"J\n" +
	"\x14SetWatchlistResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\x12SetCronTimeRequest\x12\x1b\n" +
	"\tcron_time\x18\x01 \x01(\x05R\bcronTime\"I\n" +
	"\x13SetCronTimeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x8c\x02\n" +
	"\n" +
	"TUIService\x12B\n" +
	"\x0eSendDatastream\x12\x17.tui.DataStreamReceived\x1a\x13.tui.DataStreamSend(\x010\x01\x127\n" +
	"\n" +
	"StreamLogs\x12\x17.tui.DataStreamReceived\x1a\f.tui.LogLine(\x010\x01\x12?\n" +
	"\bSetWatch\x12\x18.tui.SetWatchlistRequest\x1a\x19.tui.SetWatchlistResponse\x12@\n" +
	"\vSetCronTime\x12\x17.tui.SetCronTimeRequest\x1a\x18.tui.SetCronTimeResponseBIZGgithub.com/MadhavKrishanGoswami/Lighthouse/services/common/genproto/tuib\x06proto3"

var (
	file_tui_proto_rawDescOnce sync.Once
	file_tui_proto_rawDescData []byte
)

func file_tui_proto_rawDescGZIP() []byte {
	file_tui_proto_rawDescOnce.Do(func() {
		file_tui_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tui_proto_rawDesc), len(file_tui_proto_rawDesc)))
	})
	return file_tui_proto_rawDescData
}

var file_tui_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tui_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_tui_proto_goTypes = []any{
	(ContainerInfo_Status)(0),    // 0: tui.ContainerInfo.Status
	(ServicesStatusServices)(0),  // 1: tui.servicesStatus.services
	(*ContainerInfo)(nil),        // 2: tui.ContainerInfo
	(*HostInfo)(nil),             // 3: tui.HostInfo
	(*HostList)(nil),             // 4: tui.HostList
	(*ServicesStatus)(nil),       // 5: tui.servicesStatus
	(*DataStreamSend)(nil),       // 6: tui.DataStreamSend
	(*DataStreamReceived)(nil),   // 7: tui.DataStreamReceived
	(*LogLine)(nil),              // 8: tui.LogLine
	(*SetWatchlistRequest)(nil),  // 9: tui.SetWatchlistRequest
	(*SetWatchlistResponse)(nil), // 10: tui.SetWatchlistResponse
	(*SetCronTimeRequest)(nil),   // 11: tui.SetCronTimeRequest
	(*SetCronTimeResponse)(nil),  // 12: tui.SetCronTimeResponse
}
var file_tui_proto_depIdxs = []int32{
	0,  // 0: tui.ContainerInfo.status:type_name -> tui.ContainerInfo.Status
	2,  // 1: tui.HostInfo.containers:type_name -> tui.ContainerInfo
	3,  // 2: tui.HostList.hosts:type_name -> tui.HostInfo
	1,  // 3: tui.servicesStatus.services_status:type_name -> tui.servicesStatus.services
	4,  // 4: tui.DataStreamSend.host_list:type_name -> tui.HostList
	5,  // 5: tui.DataStreamSend.services_status:type_name -> tui.servicesStatus
	7,  // 6: tui.TUIService.SendDatastream:input_type -> tui.DataStreamReceived
	7,  // 7: tui.TUIService.StreamLogs:input_type -> tui.DataStreamReceived
	9,  // 8: tui.TUIService.SetWatch:input_type -> tui.SetWatchlistRequest
	11, // 9: tui.TUIService.SetCronTime:input_type -> tui.SetCronTimeRequest
	6,  // 10: tui.TUIService.SendDatastream:output_type -> tui.DataStreamSend
	8,  // 11: tui.TUIService.StreamLogs:output_type -> tui.LogLine
	10, // 12: tui.TUIService.SetWatch:output_type -> tui.SetWatchlistResponse
	12, // 13: tui.TUIService.SetCronTime:output_type -> tui.SetCronTimeResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_tui_proto_init() }
func file_tui_proto_init() {
	if File_tui_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tui_proto_rawDesc), len(file_tui_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tui_proto_goTypes,
		DependencyIndexes: file_tui_proto_depIdxs,
		EnumInfos:         file_tui_proto_enumTypes,
		MessageInfos:      file_tui_proto_msgTypes,
	}.Build()
	File_tui_proto = out.File
	file_tui_proto_goTypes = nil
	file_tui_proto_depIdxs = nil
}
