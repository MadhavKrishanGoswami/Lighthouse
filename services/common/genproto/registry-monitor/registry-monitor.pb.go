// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: registry-monitor.proto

package registry_monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ==========================
// Messages
// ==========================
type ImageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerUid  string                 `protobuf:"bytes,1,opt,name=containerUid,proto3" json:"containerUid,omitempty"` // Unique ID for the container
	Repository    string                 `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`     // e.g., "nginx"
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`                   // e.g., "1.25.0"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	mi := &file_registry_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_registry_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_registry_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *ImageInfo) GetContainerUid() string {
	if x != nil {
		return x.ContainerUid
	}
	return ""
}

func (x *ImageInfo) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *ImageInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type CheckUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*ImageInfo           `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"` // List of images currently in use
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUpdatesRequest) Reset() {
	*x = CheckUpdatesRequest{}
	mi := &file_registry_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesRequest) ProtoMessage() {}

func (x *CheckUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesRequest.ProtoReflect.Descriptor instead.
func (*CheckUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_registry_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *CheckUpdatesRequest) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

type ImagetoUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerUid  string                 `protobuf:"bytes,1,opt,name=containerUid,proto3" json:"containerUid,omitempty"` // Unique ID for the container
	NewTag        string                 `protobuf:"bytes,3,opt,name=newTag,proto3" json:"newTag,omitempty"`             // e.g., "1.25.1"
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`   // Optional info, e.g., "Patch release available"
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // Unix timestamp when update was detected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagetoUpdate) Reset() {
	*x = ImagetoUpdate{}
	mi := &file_registry_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagetoUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagetoUpdate) ProtoMessage() {}

func (x *ImagetoUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_registry_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagetoUpdate.ProtoReflect.Descriptor instead.
func (*ImagetoUpdate) Descriptor() ([]byte, []int) {
	return file_registry_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *ImagetoUpdate) GetContainerUid() string {
	if x != nil {
		return x.ContainerUid
	}
	return ""
}

func (x *ImagetoUpdate) GetNewTag() string {
	if x != nil {
		return x.NewTag
	}
	return ""
}

func (x *ImagetoUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ImagetoUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type CheckUpdatesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ImagestoUpdate []*ImagetoUpdate       `protobuf:"bytes,1,rep,name=ImagestoUpdate,proto3" json:"ImagestoUpdate,omitempty"` // Only images with updates
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CheckUpdatesResponse) Reset() {
	*x = CheckUpdatesResponse{}
	mi := &file_registry_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesResponse) ProtoMessage() {}

func (x *CheckUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesResponse.ProtoReflect.Descriptor instead.
func (*CheckUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_registry_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *CheckUpdatesResponse) GetImagestoUpdate() []*ImagetoUpdate {
	if x != nil {
		return x.ImagestoUpdate
	}
	return nil
}

var File_registry_monitor_proto protoreflect.FileDescriptor

const file_registry_monitor_proto_rawDesc = "" +
	"\n" +
	"\x16registry-monitor.proto\x12\x0fregistrymonitor\"a\n" +
	"\tImageInfo\x12\"\n" +
	"\fcontainerUid\x18\x01 \x01(\tR\fcontainerUid\x12\x1e\n" +
	"\n" +
	"repository\x18\x02 \x01(\tR\n" +
	"repository\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\"I\n" +
	"\x13CheckUpdatesRequest\x122\n" +
	"\x06images\x18\x01 \x03(\v2\x1a.registrymonitor.ImageInfoR\x06images\"\x8b\x01\n" +
	"\rImagetoUpdate\x12\"\n" +
	"\fcontainerUid\x18\x01 \x01(\tR\fcontainerUid\x12\x16\n" +
	"\x06newTag\x18\x03 \x01(\tR\x06newTag\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"^\n" +
	"\x14CheckUpdatesResponse\x12F\n" +
	"\x0eImagestoUpdate\x18\x01 \x03(\v2\x1e.registrymonitor.ImagetoUpdateR\x0eImagestoUpdate2u\n" +
	"\x16RegistryMonitorService\x12[\n" +
	"\fCheckUpdates\x12$.registrymonitor.CheckUpdatesRequest\x1a%.registrymonitor.CheckUpdatesResponseBFZDgithub.com/MadhavKrishanGoswami/Lighthouse/services/registry-monitorb\x06proto3"

var (
	file_registry_monitor_proto_rawDescOnce sync.Once
	file_registry_monitor_proto_rawDescData []byte
)

func file_registry_monitor_proto_rawDescGZIP() []byte {
	file_registry_monitor_proto_rawDescOnce.Do(func() {
		file_registry_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_monitor_proto_rawDesc), len(file_registry_monitor_proto_rawDesc)))
	})
	return file_registry_monitor_proto_rawDescData
}

var file_registry_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_registry_monitor_proto_goTypes = []any{
	(*ImageInfo)(nil),            // 0: registrymonitor.ImageInfo
	(*CheckUpdatesRequest)(nil),  // 1: registrymonitor.CheckUpdatesRequest
	(*ImagetoUpdate)(nil),        // 2: registrymonitor.ImagetoUpdate
	(*CheckUpdatesResponse)(nil), // 3: registrymonitor.CheckUpdatesResponse
}
var file_registry_monitor_proto_depIdxs = []int32{
	0, // 0: registrymonitor.CheckUpdatesRequest.images:type_name -> registrymonitor.ImageInfo
	2, // 1: registrymonitor.CheckUpdatesResponse.ImagestoUpdate:type_name -> registrymonitor.ImagetoUpdate
	1, // 2: registrymonitor.RegistryMonitorService.CheckUpdates:input_type -> registrymonitor.CheckUpdatesRequest
	3, // 3: registrymonitor.RegistryMonitorService.CheckUpdates:output_type -> registrymonitor.CheckUpdatesResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_registry_monitor_proto_init() }
func file_registry_monitor_proto_init() {
	if File_registry_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_monitor_proto_rawDesc), len(file_registry_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_monitor_proto_goTypes,
		DependencyIndexes: file_registry_monitor_proto_depIdxs,
		MessageInfos:      file_registry_monitor_proto_msgTypes,
	}.Build()
	File_registry_monitor_proto = out.File
	file_registry_monitor_proto_goTypes = nil
	file_registry_monitor_proto_depIdxs = nil
}
